# In this SQL, I have queried a database with multiple tables in it to quantify statistics about customer and order data. 

--How many orders were placed in January?

SELECT COUNT (orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?

SELECT SUM (Quantity) AS iPhone_Count
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product is 'iPhone';

--Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT customers.acctnum
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
ON customers.order_id=FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?

SELECT product, MIN (price)
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price asc
LIMIT 1;

--What is the total revenue for each product sold in January?

SELECT product, SUM (Quantity)*price as revenue
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
 
SELECT product, SUM(Quantity)*price as revenue, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(distinct acctnum) AS Customers, 
AVG(price*quantity) AS AVG_spent
FROM BIT_DB.customers AS c
LEFT JOIN BIT_DB.FebSales AS Feb
ON c.order_id=Feb.orderID
WHERE feb.quantity>'2'
AND length(orderid) = 6
AND orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;
